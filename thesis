#!/usr/bin/env bash
dir_content() { echo "$PWD/content"; }
dir_figures() { echo "$PWD/content/figures"; }
dir_assets() { echo "$PWD/assets"; }
dir_metadata() { echo "$PWD/metadata"; }

dir_out() {
    DIR_OUT=$1
    : "${DIR_OUT:="$PWD/build"}"
    mkdir -p "$DIR_OUT"
    echo "$DIR_OUT"
}

files_md() { find "$(dir_content)" -name '*.md' | sort ;}
files_svg() { find "$(dir_content)" -name '*.svg' ;}

thesis_apt_install() {
    sudo apt-get update && \
    sudo apt-get install --yes \
        curl \
        git \
        texlive \
        texlive-latex-extra \
        texlive-lang-european \
        librsvg2-bin=2.*
    TMP="$(mktemp -d)"
    curl --location https://github.com/jgm/pandoc/releases/download/2.18/pandoc-2.18-1-amd64.deb --output "$TMP/pandoc.deb"
    sudo apt-get install --yes "$TMP/pandoc.deb"
    rm -r "$TMP"
}

thesis_download_aaltostyle() {
    curl --location "https://wiki.aalto.fi/download/attachments/69900685/aaltothesis.cls?api=v2" \
        --output "$(dir_assets)/aaltothesis.cls"
    TMP="$(mktemp -d)"
    curl --location "https://wiki.aalto.fi/download/attachments/49383512/aaltologo.zip" \
        --output "$TMP/aaltologo.zip"
    unzip "$TMP/aaltologo.zip" -d "$TMP"
    mv "$TMP/aaltologo.sty" "$(dir_assets)"
}

thesis_download_citationstyle() {
    curl --location "https://raw.githubusercontent.com/citation-style-language/styles/master/ieee-with-url.csl" \
        --output "$(dir_assets)/citationstyle.csl"
}

thesis_html() {
    DIR_OUT=$(dir_out "$1")
    cp -r "$(dir_figures)" "$DIR_OUT"
    pandoc $(files_md) \
        --resource-path="$(dir_content)" \
        --citeproc \
        --standalone \
        --from "markdown+tex_math_dollars" \
        --to "html" \
        --output "$DIR_OUT/index.html" \
        --mathjax \
        --metadata "date=$(date -I)" \
        --metadata-file "$(dir_metadata)/html.yaml" \
        --bibliography "$(dir_content)/bibliography/online.bib" \
        --bibliography "$(dir_content)/bibliography/manual.bib" \
        --bibliography "$(dir_content)/bibliography/article.bib" \
        --bibliography "$(dir_content)/bibliography/inproceedings.bib" \
        --bibliography "$(dir_content)/bibliography/book.bib" \
        --bibliography "$(dir_content)/bibliography/software.bib" \
        --csl "$(dir_assets)/citationstyle.csl" \
        --toc \
        --number-sections \
        --toc-depth 2 \
        --strip-comments
}

thesis_epub() {
    DIR_OUT=$(dir_out "$1")
    pandoc $(files_md) \
        --resource-path="$(dir_content)" \
        --citeproc \
        --from "markdown+tex_math_dollars" \
        --to "epub" \
        --output "$DIR_OUT/sci_2023_tollander-de-balsch_jaan.epub" \
        --mathml \
        --metadata "date=$(date -I)" \
        --metadata-file "$(dir_metadata)/epub.yaml" \
        --bibliography "$(dir_content)/bibliography/online.bib" \
        --bibliography "$(dir_content)/bibliography/manual.bib" \
        --bibliography "$(dir_content)/bibliography/article.bib" \
        --bibliography "$(dir_content)/bibliography/inproceedings.bib" \
        --bibliography "$(dir_content)/bibliography/book.bib" \
        --bibliography "$(dir_content)/bibliography/software.bib" \
        --csl "$(dir_assets)/citationstyle.csl" \
        --toc \
        --number-sections \
        --toc-depth 2 \
        --strip-comments
}

thesis_pdf() {
    TEXINPUTS="::$(dir_assets)"
    export TEXINPUTS
    DIR_OUT=$(dir_out "$1")
    pandoc $(files_md) \
        --resource-path="$(dir_content)" \
        --citeproc \
        --from "markdown+tex_math_dollars+raw_tex" \
        --to "latex" \
        --output "$DIR_OUT/sci_2023_tollander-de-balsch_jaan.pdf" \
        --pdf-engine="pdflatex" \
        --metadata "date=$(date -I)" \
        --metadata-file "$(dir_metadata)/tex.yaml" \
        --bibliography "$(dir_content)/bibliography/online.bib" \
        --bibliography "$(dir_content)/bibliography/manual.bib" \
        --bibliography "$(dir_content)/bibliography/article.bib" \
        --bibliography "$(dir_content)/bibliography/inproceedings.bib" \
        --bibliography "$(dir_content)/bibliography/book.bib" \
        --bibliography "$(dir_content)/bibliography/software.bib" \
        --csl "$(dir_assets)/citationstyle.csl" \
        --include-in-header "$(dir_content)/header.tex" \
        --include-before-body "$(dir_content)/body.tex" \
        --number-sections \
        --toc-depth 2 \
        --strip-comments \
        --top-level-division="section"
}

thesis_tex() {
    DIR_OUT=$(dir_out "$1")
    pandoc $(files_md) \
        --citeproc \
        --from "markdown+tex_math_dollars+raw_tex" \
        --to "latex" \
        --output "$DIR_OUT/sci_2023_tollander-de-balsch_jaan.tex" \
        --metadata "date=$(date -I)" \
        --metadata-file "$(dir_metadata)/tex.yaml" \
        --bibliography "$(dir_content)/bibliography/online.bib" \
        --bibliography "$(dir_content)/bibliography/manual.bib" \
        --bibliography "$(dir_content)/bibliography/article.bib" \
        --bibliography "$(dir_content)/bibliography/inproceedings.bib" \
        --bibliography "$(dir_content)/bibliography/book.bib" \
        --bibliography "$(dir_content)/bibliography/software.bib" \
        --csl "$(dir_assets)/citationstyle.csl" \
        --include-in-header "$(dir_content)/header.tex" \
        --include-before-body "$(dir_content)/body.tex" \
        --number-sections \
        --toc-depth 2 \
        --strip-comments \
        --top-level-division="section"
}

thesis_preview() {
    THESIS_PREVIEW_CMD=$1
    case "$THESIS_PREVIEW_CMD" in
        thesis_pdf|thesis_epub|thesis_html) ;;
        *) exit 1 ;;
    esac

    # Run command initially before watching changes.
    $THESIS_PREVIEW_CMD

    # Run "THESIS_PREVIEW_CMD" if files in target directories change.
    # https://superuser.com/questions/181517/how-to-execute-a-command-whenever-a-file-changes
    inotifywait -e close_write,moved_to,create -m "$(dir_content)" -m "$(dir_content)/bibliography" -m "$(dir_metadata)" |
    while read -r directory events filename; do
        case $filename in 
            (*.md|*.bib|*.tex|*.yaml)
                echo "$filename" "$events"
                $THESIS_PREVIEW_CMD
                ;;
            (*) ;;
        esac
    done
    unset directory events filename
}

thesis_serve() {
    julia serve.jl "$(dir_out)"
}

thesis_build() {
    TMP=$(mktemp -d)
    echo "$TMP"
    cp -r .git "$TMP"

    (
        cd "$TMP" && \
        git checkout  --orphan "build" && \
        git rm -rf .
    )

    thesis_pdf "$TMP"
    thesis_epub "$TMP"

    (
        cd "$TMP" && \
        git add . && \
        git commit -m "build" && \
        git push "origin" "build" --force
    )
}

thesis_clean_drawio() {
    files_svg | xargs sed -i 's/Text is not SVG - cannot display//'
}


# Pass arguments
case "$1" in 
    "apt-install") thesis_apt_install ;;
    "pdf") thesis_pdf "$2" ;;
    "html") thesis_html "$2" ;;
    "epub") thesis_epub "$2" ;;
    "tex") thesis_tex "$2" ;;
    "build") thesis_build ;;
    "serve") thesis_serve ;;
    "preview") case "$2" in
        "pdf") thesis_preview thesis_pdf ;;
        "html") thesis_preview thesis_html ;;
    esac ;;
    "download") case "$2" in
        "aaltostyle") thesis_download_aaltostyle;;
        "citationstyle") thesis_download_citationstyle;;
    esac ;;
    "clean-drawio") thesis_clean_drawio ;;
    *) exit 1 ;;
esac
